use ansi_term::Style;
use fs::File;
use info::filetype::FileExtensions;
use output::file_name::FileStyle;

pub trait FileIcon {
    fn icon_file(&self, file: &File) -> Option<char>;
}

pub enum Icons {
    Android,
    Apple,
    Audio,
    Compressed,
    Conf,
    Crypto,
    Css,
    Doc,
    Ebook,
    Font,
    Git,
    Hs,
    Html,
    Image,
    Java,
    Json,
    Jsx,
    Md,
    Package,
    Picture,
    Ppt,
    Py,
    R,
    Rb,
    Rubydoc,
    Shell,
    Styl,
    Tex,
    Video,
    Vim,
    Windows,
    Xls,
    Xml,
    Yml,
}

impl Icons {
    pub fn value(&self) -> char {
        match *self {
            Icons::Android    => '\u{e70e}',
            Icons::Apple      => '\u{f179}',
            Icons::Audio      => '\u{f025}',
            Icons::Compressed => '\u{f410}',
            Icons::Conf       => '\u{e615}',
            Icons::Crypto     => '\u{f83d}',
            Icons::Css        => '\u{e749}',
            Icons::Doc        => '\u{f1c2}',
            Icons::Ebook      => '\u{e28b}',
            Icons::Font       => '\u{f031}',            
            Icons::Git        => '\u{f1d3}',
            Icons::Hs         => '\u{e777}',
            Icons::Html       => '\u{e60e}',
            Icons::Image      => '\u{f0a0}',
            Icons::Java       => '\u{e204}',
            Icons::Json       => '\u{e60b}',
            Icons::Jsx        => '\u{e7ba}',
            Icons::Md         => '\u{f48a}',
            Icons::Package    => '\u{f487}',
            Icons::Picture    => '\u{f1c5}',
            Icons::Ppt        => '\u{f1c4}',
            Icons::Py         => '\u{e606}',
            Icons::R          => '\u{f25d}',
            Icons::Rb         => '\u{e21e}',
            Icons::Rubydoc    => '\u{e73b}',
            Icons::Shell      => '\u{f120}',
            Icons::Styl       => '\u{e600}',
            Icons::Tex        => '\u{e600}',
            Icons::Video      => '\u{f03d}',
            Icons::Vim        => '\u{e62b}',
            Icons::Windows    => '\u{f17a}',
            Icons::Xls        => '\u{f1c3}',
            Icons::Xml        => '\u{e619}',
            Icons::Yml        => '\u{f481}',
        }
    }
}

pub fn painted_icon(file: &File, style: &FileStyle) -> String {
    let file_icon = icon(&file).to_string();
    let painted = style.exts
            .colour_file(&file)
            .map_or(file_icon.to_string(), |c| { 
                // Remove underline from icon
                if c.is_underline {
                    match c.foreground {
                        Some(color) => Style::from(color).paint(file_icon).to_string(),
                        None => Style::default().paint(file_icon).to_string(),
                    }
                } else {
                    c.paint(file_icon).to_string() 
                }
            });
    format!("{} ", painted)
}

fn icon(file: &File) -> char {
    let extensions = Box::new(FileExtensions);
    if file.is_directory() {
        match &file.name[..] {
            ".atom" => '\u{e764}',
            ".git" => '\u{f1d3}',
            ".github" => '\u{f408}',
            ".rvm" => '\u{e21e}',
            ".Trash" => '\u{f1f8}',
            ".vscode" => '\u{e70c}',
            "config" => '\u{e5fc}',
            ".config" => '\u{e5fc}',
            "bin" => '\u{e5fc}',
            ".bin" => '\u{e5fc}',
            "include" => '\u{e5fc}',
            "folder" => '\u{f115}',
            "hidden" => '\u{f023}',
            "lib" => '\u{f121}',
            "node_modules" => '\u{e718}',
            _ => '\u{f115}',
        }
    }
    else if let Some(icon) = extensions.icon_file(file) { icon }
    else { 
        if let Some(ext) = file.ext.as_ref() {
            match ext.as_str() {
								// new swaps
								"log" => '\u{e714}',
								"txt" => '\u{e714}',
								"etx" => '\u{e60e}',
								"info" => '\u{e60e}',
								"markdown" => '\u{e60e}',
								"md" => '\u{e60e}',
								"mkd" => '\u{e60e}',
								"nfo" => '\u{e60e}',
								"pod" => '\u{e60e}',
								"tex" => '\u{e60e}',
								"textile" => '\u{e60e}',
								"json" => '\u{e60b}',
								"msg" => '\u{e60b}',
								"pgn" => '\u{e60b}',
								"xml" => '\u{e60b}',
								"yml" => '\u{e60b}',
								"rdata" => '\u{e60b}',
								"cbr" => '\u{e299}',
								"cbz" => '\u{e299}',
								"chm" => '\u{e299}',
								"djvu" => '\u{e299}',
								"pdf" => '\u{f411}',
								"rtf" => '\u{f035}',
								"odp" => '\u{f035}',
								"ini" => '\u{f0ad}',
								"viminfo" => '\u{f0ad}',
								"pcf" => '\u{f0ad}',
								"psf" => '\u{f0ad}',
								"git" => '\u{e702}',
								"gitignore" => '\u{e702}',
								"gitmodules" => '\u{e702}',
								"py" => '\u{e606}',
								"pl" => '\u{e769}',
								"t" => '\u{e769}',
								"msql" => '\u{e229}',
								"mysql" => '\u{e229}',
								"pgsql" => '\u{f1c0}',
								"sql" => '\u{f1c0}',
								"tcl" => '\u{e7c4}',
								"asm" => '\u{e79d}',
								"cl" => '\u{e768}',
								"lisp" => '\u{e768}',
								"lua" => '\u{e620}',
								"moon" => '\u{f186}',
								"c" => '\u{e61e}',
								"h" => '\u{e61e}',
								"tcc" => '\u{e61e}',
								"c++" => '\u{e61d}',
								"h++" => '\u{e61d}',
								"hpp" => '\u{e61d}',
								"hxx" => '\u{e61d}',
								"ii" => '\u{e61d}',
								"m" => '\u{e61e}',
								"cpp" => '\u{e61d}',
								"cxx" => '\u{e61d}',
								"cr" => '\u{e739}',
								"go" => '\u{e626}',
								"s" => '\u{e79d}',
								"rs" => '\u{e7a8}',
								"hs" => '\u{e61f}',
								"lhs" => '\u{e61f}',
								"pyc" => '\u{e606}',
								"css" => '\u{e614}',
								"less" => '\u{e60b}',
								"sass" => '\u{e603}',
								"scss" => '\u{e603}',
								"mustache" => '\u{e60f}',
								"java" => '\u{e61b}',
								"jsm" => '\u{e60c}',
								"jsp" => '\u{e60c}',
								"php" => '\u{e608}',
								"ctp" => '\u{e608}',
								"twig" => '\u{e61c}',
								"am" => '\u{f0ad}',
								"in" => '\u{f0ad}',
								"hin" => '\u{f0ad}',
								"scan" => '\u{f0ad}',
								"m4" => '\u{f0ad}',
								"old" => '\u{f0ad}',
								"out" => '\u{f0ad}',
								"skip" => '\u{f0ad}',
								"diff" => '\u{f467}',
								"patch" => '\u{f467}',
								"psd" => '\u{e7b8}',
								"ai" => '\u{e7b4}',
								"ps" => '\u{e7b8}',
								"3ga" => '\u{f025}',
								"s3m" => '\u{f025}',
								"aac" => '\u{f025}',
								"au" => '\u{f025}',
								"dat" => '\u{f025}',
								"dts" => '\u{f025}',
								"fcm" => '\u{f025}',
								"m4a" => '\u{f025}',
								"mid" => '\u{f025}',
								"midi" => '\u{f025}',
								"mod" => '\u{f025}',
								"mp3" => '\u{f025}',
								"mp4a" => '\u{f025}',
								"oga" => '\u{f025}',
								"ogg" => '\u{f025}',
								"opus" => '\u{f025}',
								"sid" => '\u{f025}',
								"wma" => '\u{f025}',
								"ape" => '\u{f025}',
								"aiff" => '\u{f025}',
								"cda" => '\u{f025}',
								"flac" => '\u{f025}',
								"alac" => '\u{f025}',
								"pcm" => '\u{f025}',
								"wav" => '\u{f025}',
								"wv" => '\u{f025}',
								"wvc" => '\u{f025}',
								"afm" => '\u{f031}',
								"fon" => '\u{f031}',
								"fnt" => '\u{f031}',
								"pfb" => '\u{f031}',
								"pfm" => '\u{f031}',
								"ttf" => '\u{f031}',
								"otf" => '\u{f031}',
								"pfa" => '\u{f031}',
								"part" => '\u{e601}',
								"accdb" => '\u{f1c0}',
								"accde" => '\u{f1c0}',
								"accdr" => '\u{f1c0}',
								"accdt" => '\u{f1c0}',
								"db" => '\u{f1c0}',
								"fmp12" => '\u{f1c0}',
								"fp7" => '\u{f1c0}',
								"mdb" => '\u{f1c0}',
								"mde" => '\u{f1c0}',
								"sqlite" => '\u{f1c0}',
								"typelib" => '\u{f1c0}',
								"nc" => '\u{f1c0}',
								"pacnew" => '\u{f0e2}',
								"un~" => '\u{f0e2}',
								"orig" => '\u{f0e2}',
								"bup" => '\u{f0e2}',
								"bak" => '\u{f0e2}',
								"pid" => '\u{f023}',
								"state" => '\u{f023}',
								"err" => '\u{f12a}',
								"error" => '\u{f12a}',
								"stderr" => '\u{f12a}',
								"dump" => '\u{f487}',
								"stackdump" => '\u{f487}',
								"zcompdump" => '\u{f487}',
								"zwc" => '\u{f487}',
								"pcap" => '\u{e765}',
								"cap" => '\u{e765}',
								"dmp" => '\u{e765}',
								"ds_store" => '\u{f179}',
								"localized" => '\u{f179}',
								"cfusertextencoding" => '\u{f179}',
								"allow" => '\u{f00c}',
								"deny" => '\u{f12a}',
								"service" => '\u{f109}',
								"socket" => '\u{f109}',
								"swap" => '\u{f109}',
								"device" => '\u{f109}',
								"mount" => '\u{f109}',
								"automount" => '\u{f109}',
								"target" => '\u{f109}',
								"path" => '\u{f109}',
								"timer" => '\u{f109}',
								"snapshot" => '\u{f109}',
								"application" => '\u{e60b}',
								"cue" => '\u{e60b}',
								"description" => '\u{e60b}',
								"directory" => '\u{e60b}',
								"m3u" => '\u{e60b}',
								"m3u8" => '\u{e60b}',
								"properties" => '\u{e60b}',
								"sfv" => '\u{e60b}',
								"srt" => '\u{e60b}',
								"theme" => '\u{e60b}',
								"torrent" => '\u{e60b}',
								"urlview" => '\u{e60b}',
								"bfe" => '\u{f084}',
								"pem" => '\u{f084}',
								"32x" => '\u{f11b}',
								"cdi" => '\u{f11b}',
								"fm2" => '\u{f11b}',
								"rom" => '\u{f11b}',
								"sav" => '\u{f11b}',
								"st" => '\u{f11b}',
								"a00" => '\u{f11b}',
								"a52" => '\u{f11b}',
								"a64" => '\u{f11b}',
								"a78" => '\u{f11b}',
								"adf" => '\u{f11b}',
								"atr" => '\u{f11b}',
								"gb" => '\u{f11b}',
								"gba" => '\u{f11b}',
								"gbc" => '\u{f11b}',
								"gel" => '\u{f11b}',
								"gg" => '\u{f11b}',
								"ggl" => '\u{f11b}',
								"j64" => '\u{f11b}',
								"nds" => '\u{f11b}',
								"nes" => '\u{f11b}',
								"sms" => '\u{f11b}',
								"pcb" => '\u{f493}',
								"mm" => '\u{f035}',
								"gbr" => '\u{f1fc}',
								"scm" => '\u{f1fc}',
								"rproj" => '\u{f1fc}',
								"sis" => '\u{f10b}',
								"1p" => '\u{f10b}',
								"3p" => '\u{f10b}',
								"cnc" => '\u{f10b}',
								"def" => '\u{f10b}',
								"ex" => '\u{f10b}',
								"example" => '\u{f10b}',
								"feature" => '\u{f10b}',
								"ger" => '\u{f10b}',
								"map" => '\u{f10b}',
								"mf" => '\u{f10b}',
								"mfasl" => '\u{f10b}',
								"mi" => '\u{f10b}',
								"mtx" => '\u{f10b}',
								"pc" => '\u{f10b}',
								"pi" => '\u{f10b}',
								"plt" => '\u{f10b}',
								"pm" => '\u{f10b}',
								"rb" => '\u{e739}',
								"rdf" => '\u{f10b}',
								"rst" => '\u{f10b}',
								"ru" => '\u{f10b}',
								"sch" => '\u{f10b}',
								"sty" => '\u{f10b}',
								"sug" => '\u{f10b}',
								"tdy" => '\u{f10b}',
								"tfm" => '\u{f10b}',
								"tfnt" => '\u{f10b}',
								"tg" => '\u{f10b}',
								"vcard" => '\u{f10b}',
								"vcf" => '\u{f10b}',
								"xln" => '\u{f10b}',

								// old swaps
                "avro" => '\u{e60b}',
                "clj" => '\u{e768}',
                "coffee" => '\u{f0f4}',
                "d" => '\u{e7af}',
                "dart" => '\u{e798}',
                "dropbox" => '\u{f16b}',
                "env" => '\u{f462}',
                "erl" => '\u{e7b1}',
                "font" => '\u{f031}',
                "gform" => '\u{f298}',
                "iml" => '\u{e7b5}',
                "js" => '\u{e74e}',
                "npmignore" => '\u{e71e}',
                "rdb" => '\u{e76d}',
                "rss" => '\u{f09e}',
                "scala" => '\u{e737}',
                "sqlite3" => '\u{e7c4}',
                "ts" => '\u{e628}',
                "windows" => '\u{f17a}',
                _ => '\u{f15b}'
            }
        } else {
            '\u{f15b}'
        }
    }
}
